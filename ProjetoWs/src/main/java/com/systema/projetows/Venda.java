package com.systema.projetows;
// Generated 28/09/2020 12:30:31 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Venda generated by hbm2java
 */
@Entity
@Table(name = "venda",
         catalog = "SistemaVendas"
)
public class Venda implements java.io.Serializable {

    private int idvenda;
    private Cliente cliente;
    private List<FormaPagamento> formaPagamento;
    private Usuario usuario;
    private Date dataVenda;
    private int codigoVenda;
    private String descricao;
    private Boolean status;
    private Long valorTotal;
    private List<ItensVenda> itensVendas;

    public Venda() {
    }

    public Venda(int codigoVenda) {
        this.codigoVenda = codigoVenda;
    }

    public Venda(int idvenda, Cliente cliente, List<FormaPagamento> formaPagamento, Usuario usuario, Date dataVenda, int codigoVenda, String descricao, Boolean status, Long valorTotal, List<ItensVenda> itensVendas) {
        this.idvenda = idvenda;
        this.cliente = cliente;
        this.formaPagamento = formaPagamento;
        this.usuario = usuario;
        this.dataVenda = dataVenda;
        this.codigoVenda = codigoVenda;
        this.descricao = descricao;
        this.status = status;
        this.valorTotal = valorTotal;
        this.itensVendas = itensVendas;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idvenda", unique = true, nullable = false)
    public int getIdvenda() {
        return this.idvenda;
    }

    public void setIdvenda(int idvenda) {
        this.idvenda = idvenda;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cliente_id")
    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinColumn(name = "forma_pagamento_id")
    public List<FormaPagamento> getFormaPagamento() {
        return this.formaPagamento;
    }

    public void setFormaPagamento(List<FormaPagamento> formaPagamento) {
        this.formaPagamento = formaPagamento;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario_id")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "data_venda", length = 19)
    public Date getDataVenda() {
        return this.dataVenda;
    }

    public void setDataVenda(Date dataVenda) {
        this.dataVenda = dataVenda;
    }

    @Column(name = "codigo_venda", nullable = false)
    public int getCodigoVenda() {
        return this.codigoVenda;
    }

    public void setCodigoVenda(int codigoVenda) {
        this.codigoVenda = codigoVenda;
    }

    @Column(name = "descricao", length = 200)
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Column(name = "status")
    public Boolean getStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @Column(name = "valorTotal", precision = 10, scale = 0)
    public Long getValorTotal() {
        return this.valorTotal;
    }

    public void setValorTotal(Long valorTotal) {
        this.valorTotal = valorTotal;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "venda")
    public List<ItensVenda> getItensVendas() {
        return this.itensVendas;
    }

    public void setItensVendas(List<ItensVenda> itensVendas) {
        this.itensVendas = itensVendas;
    }

}
